demo90
demo()
install.packages("KernSmooth")
package.help(KernSmooth)
KernSmooth
installed.packages("KernSmooth")
installed.packages(c("KernSmooth")
)
installed.packages(c("KernSmooth"))
library(KernSmooth)
clear
clear()
5.4 %% 1
cube <- function(x,n) {x^3}
cube(3)
f <- function(x) {}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
f(3)
> library(ggmap)
> library(mapproj)
> map <- get_map(location = 'Europe', zoom = 4)
> ggmap(map)
library(ggmap)
install.packages(ggmap)
install.packages()
?install.packages
install.packages("ggmap")
library(ggmap)
map <- get_map(location = "United States", zoom = 4)
ggmap(map)
set.seed(1)
rpois(5, 2)
?dpois
x <- rep(0:1, each = 5)
x
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2*x + e
plot(x,y)
plot(y)
plot(x,y)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2*x + e
plot(x,y)
hist(y)
?rbinom
?system.time
library(swirl)
swirl()
my_vector <- c(1:20)
my_vector[1:20]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix_2 <- matrix(1:20, nrow = 4, ncol = 5)
my_matrix_2 <- matrix(data = 1:20, nrow = 4, ncol = 5)
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelley", "Sean")
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients , my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
mean(c(8,11,6,12,8))
47+18
240 / 12
1250 * 1.08
1350 / 120
11 * 120
4!
factorial(4)
factorial(3)
81 ^ 2
81 ^ 2 ^ 2
5^5
3^3
4^4
25 * 6
150 / 5
200 / 40
24 / 60
.4 * 55
0.4 * 55
IRkernel::installspec(user = FALSE)
install.packages(c('rzmq','repr','IRkernel','IRdisplay'),
repos = c('http://irkernel.github.io/', getOption('repos')))
IRkernel::installspec()
x <- rnorm(100)
hist(x)
y <- rnorm(100)
plot(x, y)
par(mar = c(2, 2, 2, 2))
plot(x, y)
plot(x, y, pch = 4)
plot(x, y, pch = 10)
example("points")
getwd()
setwd("~/Dropbox/Data Science Coursera/04 Exploratory Data Analysis/Project 1/ExData_Plotting1")
## Load In Data
dat <- read.csv("household_power_consumption.txt", sep = ";")
## Convert the dates to the proper dateformat
dat$Date <- as.Date(dat$Date, format = "%d/%m/%Y")
## Subset Data between the specified dates
date1 <- as.Date("2007-02-01")
date2 <- as.Date("2007-02-02")
dat <- dat[dat$Date >= date1 & dat$Date <= date2,]
## Convert the Global Active Power to numeric
dat$Global_active_power <- as.numeric(as.character(dat$Global_active_power))
## Create new Date/Time column
dat$DateTime <- strptime(paste(dat$Date, dat$Time), format="%Y-%m-%d %H:%M:%S")
## Plot the line graph
plot(dat$DateTime, dat$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts")
## Close png file
dev.copy(png, "plot2.png", width = 480, height = 480, units = "px", bg = "transparent")
dev.off()
## Load In Data
dat <- read.csv("household_power_consumption.txt", sep = ";")
## Convert the dates to the proper dateformat
dat$Date <- as.Date(dat$Date, format = "%d/%m/%Y")
## Subset Data between the specified dates
date1 <- as.Date("2007-02-01")
date2 <- as.Date("2007-02-02")
dat <- dat[dat$Date >= date1 & dat$Date <= date2,]
summary(dat)
head(dat$Sub_metering_1)
class(dat$Sub_metering_1)
## Convert the Global Active Power to numeric
dat$Global_active_power <- as.numeric(as.character(dat$Global_active_power))
dat$Sub_metering_1 <- as.numeric(as.character(dat$Sub_metering_1))
dat$Sub_metering_2 <- as.numeric(as.character(dat$Sub_metering_2))
dat$Sub_metering_3 <- as.numeric(as.character(dat$Sub_metering_3))
## Create new Date/Time column
dat$DateTime <- strptime(paste(dat$Date, dat$Time), format="%Y-%m-%d %H:%M:%S")
plot(dat$DateTime, dat$Sub_metering_1)
plot(dat$DateTime, dat$Sub_metering_1, dat$Sub_metering_2)
plot(dat$DateTime, dat$Sub_metering_1, type = "l")
plot(dat$DateTime, dat$Sub_metering_1, type = "l", ylab = "Energy sub metering")
plot(dat$DateTime, dat$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
?points
points(dat$Sub_metering_2)
lines(dat$Sub_metering_2)
lines(dat$DateTime, dat$Sub_metering_2)
plot(dat$DateTime, dat$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
plot(dat$DateTime, dat$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
lines(dat$DateTime, dat$Sub_metering_2, col = "red")
lines(dat$DateTime, dat$Sub_metering_3, col = "blue")
plot(dat$DateTime, dat$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
legend("topright", pch = 1, col = c("blue", "red"), legend = c("May", "Other Months"))
?pch
legend("topright", lwd = 1, col = c("blue", "red"), legend = c("May", "Other Months"))
legend("topright", lwd = 1, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", lwd = 1, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("right", lwd = 1, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", lwd = 1, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## Create the plots
plot(dat$DateTime, dat$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
lines(dat$DateTime, dat$Sub_metering_2, col = "red")
lines(dat$DateTime, dat$Sub_metering_3, col = "blue")
## Add the legend to the top right corner
legend("topright", lwd = 1, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## Create the plots
plot(dat$DateTime, dat$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
lines(dat$DateTime, dat$Sub_metering_2, col = "red")
lines(dat$DateTime, dat$Sub_metering_3, col = "blue")
## Add the legend to the top right corner
legend("topright", lwd = 1, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", lwd = 1, cex = 0.75, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", lwd = 1, cex = 0.5, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## Create the plots
plot(dat$DateTime, dat$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
lines(dat$DateTime, dat$Sub_metering_2, col = "red")
lines(dat$DateTime, dat$Sub_metering_3, col = "blue")
## Add the legend to the top right corner
legend("topright", lwd = 1, cex = 0.5, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", lwd = 1, cex = 0.25, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", lwd = 1, cex = 0.5, pt.cex = 1, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## Create the plots
plot(dat$DateTime, dat$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
lines(dat$DateTime, dat$Sub_metering_2, col = "red")
lines(dat$DateTime, dat$Sub_metering_3, col = "blue")
## Add the legend to the top right corner
legend("topright", lwd = 1, cex = 0.5, pt.cex = 1, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", lwd = 1, cex = 0.5, pt.cex = 1.5, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## Create the plots
plot(dat$DateTime, dat$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
lines(dat$DateTime, dat$Sub_metering_2, col = "red")
lines(dat$DateTime, dat$Sub_metering_3, col = "blue")
## Add the legend to the top right corner
legend("topright", lwd = 1, cex = 0.5, pt.cex = 1.5, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", lwd = 1, pt.cex = 0.5, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
?pt.cex
??pt.cex
## Create the plots
plot(dat$DateTime, dat$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
lines(dat$DateTime, dat$Sub_metering_2, col = "red")
lines(dat$DateTime, dat$Sub_metering_3, col = "blue")
## Add the legend to the top right corner
legend("topright", lwd = 1, pt.cex = 1, cex = .5, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", lwd = 1, pt.cex = .5, cex = 1, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", lwd = 1, pt.cex = 1, cex = .5, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
legend("topright", lwd = 1, pt.cex = 2, cex = .5, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## Create the plots
plot(dat$DateTime, dat$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
lines(dat$DateTime, dat$Sub_metering_2, col = "red")
lines(dat$DateTime, dat$Sub_metering_3, col = "blue")
## Add the legend to the top right corner
legend("topright", lwd = 1, pt.cex = 2, cex = .5, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## Load In Data
dat <- read.csv("household_power_consumption.txt", sep = ";")
## Convert the dates to the proper dateformat
dat$Date <- as.Date(dat$Date, format = "%d/%m/%Y")
## Subset Data between the specified dates
date1 <- as.Date("2007-02-01")
date2 <- as.Date("2007-02-02")
dat <- dat[dat$Date >= date1 & dat$Date <= date2,]
## Convert the Global Active Power to numeric
dat$Global_active_power <- as.numeric(as.character(dat$Global_active_power))
dat$Sub_metering_1 <- as.numeric(as.character(dat$Sub_metering_1))
dat$Sub_metering_2 <- as.numeric(as.character(dat$Sub_metering_2))
dat$Sub_metering_3 <- as.numeric(as.character(dat$Sub_metering_3))
## Create new Date/Time column
dat$DateTime <- strptime(paste(dat$Date, dat$Time), format="%Y-%m-%d %H:%M:%S")
## Create the plots
plot(dat$DateTime, dat$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
lines(dat$DateTime, dat$Sub_metering_2, col = "red")
lines(dat$DateTime, dat$Sub_metering_3, col = "blue")
## Add the legend to the top right corner
legend("topright", lwd = 1, pt.cex = 2, cex = .5, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## Copy the plot to a png file and close it
dev.copy(png, "plot3.png", width = 480, height = 480, units = "px", bg = "transparent")
dev.off()
source('~/Dropbox/Data Science Coursera/04 Exploratory Data Analysis/Project 1/ExData_Plotting1/plot3.R')
par(bg = "transparent")
par(bg = "transparent")
## Create the plots
plot(dat$DateTime, dat$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
lines(dat$DateTime, dat$Sub_metering_2, col = "red")
lines(dat$DateTime, dat$Sub_metering_3, col = "blue")
## Add the legend to the top right corner
legend("topright", lwd = 1, pt.cex = 2, cex = .5, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## Copy the plot to a png file and close it
dev.copy(png, "plot3.png", width = 480, height = 480, units = "px", bg = "transparent")
dev.off()
## Load In Data
dat <- read.csv("household_power_consumption.txt", sep = ";")
## Convert the dates to the proper dateformat
dat$Date <- as.Date(dat$Date, format = "%d/%m/%Y")
## Subset Data between the specified dates
date1 <- as.Date("2007-02-01")
date2 <- as.Date("2007-02-02")
dat <- dat[dat$Date >= date1 & dat$Date <= date2,]
## Convert the Global Active Power to numeric
dat$Global_active_power <- as.numeric(as.character(dat$Global_active_power))
dat$Sub_metering_1 <- as.numeric(as.character(dat$Sub_metering_1))
dat$Sub_metering_2 <- as.numeric(as.character(dat$Sub_metering_2))
dat$Sub_metering_3 <- as.numeric(as.character(dat$Sub_metering_3))
## Create new Date/Time column
dat$DateTime <- strptime(paste(dat$Date, dat$Time), format="%Y-%m-%d %H:%M:%S")
class(dat$Global_reactive_power)
class(dat$Voltage)
dat$Global_reactive_power <- as.numeric(as.character(dat$Global_reactive_power))
dat$Voltage <- as.numeric(as.character(dat$Voltage))
class(dat$Voltage)
class(dat$Global_reactive_power)
plot(dat$DateTime, dat$Voltage)
plot(dat$DateTime, dat$Voltage, type = "l")
plot(dat$DateTime, dat$Voltage, type = "l", xlab = "datetime", ylab = "Voltage")
plot(dat$DateTime, dat$Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power")
par(mfrow = c(2,2), mar = c(1, 1, 1, 1), oma = c(1, 1, 1, 1))
## Setup plotting the environment
par(mfrow = c(2,2), mar = c(1, 1, 1, 1), oma = c(1, 1, 1, 1))
plot(dat$DateTime, dat$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts")
plot(dat$DateTime, dat$Voltage, type = "l", xlab = "datetime", ylab = "Voltage")
plot(dat$DateTime, dat$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
lines(dat$DateTime, dat$Sub_metering_2, col = "red")
lines(dat$DateTime, dat$Sub_metering_3, col = "blue")
## Add the legend to the top right corner
legend("topright", lwd = 1, pt.cex = 2, cex = .5, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(dat$DateTime, dat$Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power")
## Setup plotting the environment
par(mfrow = c(2,2), bg = "transparent")
plot(dat$DateTime, dat$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts")
plot(dat$DateTime, dat$Voltage, type = "l", xlab = "datetime", ylab = "Voltage")
plot(dat$DateTime, dat$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
lines(dat$DateTime, dat$Sub_metering_2, col = "red")
lines(dat$DateTime, dat$Sub_metering_3, col = "blue")
## Add the legend to the top right corner
legend("topright", lwd = 1, pt.cex = 2, cex = .5, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(dat$DateTime, dat$Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power")
## Setup plotting the environment
par(mfrow = c(2,2), bg = "transparent")
plot(dat$DateTime, dat$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts")
plot(dat$DateTime, dat$Voltage, type = "l", xlab = "datetime", ylab = "Voltage")
plot(dat$DateTime, dat$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
lines(dat$DateTime, dat$Sub_metering_2, col = "red")
lines(dat$DateTime, dat$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, pt.cex = 2, cex = .5, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(dat$DateTime, dat$Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power")
## Copy the plot to a png file and close it
dev.copy(png, "plot4.png", width = 480, height = 480, units = "px", bg = "transparent")
dev.off()
par(mar = c(1, 1, 4, 1))
## Setup plotting the environment
par(mfrow = c(2,2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0), bg = "transparent")
plot(dat$DateTime, dat$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts")
plot(dat$DateTime, dat$Voltage, type = "l", xlab = "datetime", ylab = "Voltage")
plot(dat$DateTime, dat$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
lines(dat$DateTime, dat$Sub_metering_2, col = "red")
lines(dat$DateTime, dat$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, pt.cex = 2, cex = .5, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(dat$DateTime, dat$Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power")
## Copy the plot to a png file and close it
dev.copy(png, "plot4.png", width = 480, height = 480, units = "px", bg = "transparent")
dev.off()
legend("topright", lwd = 1, pt.cex = 2, cex = .25, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
## Setup plotting the environment
par(mfrow = c(2,2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0), bg = "transparent")
plot(dat$DateTime, dat$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts")
plot(dat$DateTime, dat$Voltage, type = "l", xlab = "datetime", ylab = "Voltage")
plot(dat$DateTime, dat$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
lines(dat$DateTime, dat$Sub_metering_2, col = "red")
lines(dat$DateTime, dat$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, pt.cex = 2, cex = .25, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(dat$DateTime, dat$Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power")
## Copy the plot to a png file and close it
dev.copy(png, "plot4.png", width = 480, height = 480, units = "px", bg = "transparent")
dev.off()
## Load In Data
dat <- read.csv("household_power_consumption.txt", sep = ";")
## Convert the dates to the proper dateformat
dat$Date <- as.Date(dat$Date, format = "%d/%m/%Y")
## Subset Data between the specified dates
date1 <- as.Date("2007-02-01")
date2 <- as.Date("2007-02-02")
dat <- dat[dat$Date >= date1 & dat$Date <= date2,]
## Convert the Global Active Power to numeric
dat$Global_active_power <- as.numeric(as.character(dat$Global_active_power))
## Create new Date/Time column
dat$DateTime <- strptime(paste(dat$Date, dat$Time), format="%Y-%m-%d %H:%M:%S")
## Set transparent background
par(bg = "transparent")
## Plot the line graph
plot(dat$DateTime, dat$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts")
## Copy to png file and close
dev.copy(png, "plot2.png", width = 480, height = 480, units = "px", bg = "transparent")
dev.off()
## Load In Data
dat <- read.csv("household_power_consumption.txt", sep = ";")
## Convert the dates to the proper dateformat
dat$Date <- as.Date(dat$Date, format = "%d/%m/%Y")
## Subset Data between the specified dates
date1 <- as.Date("2007-02-01")
date2 <- as.Date("2007-02-02")
dat <- dat[dat$Date >= date1 & dat$Date <= date2,]
## Convert the Global Active Power to numeric
dat$Global_active_power <- as.numeric(as.character(dat$Global_active_power))
## Create new Date/Time column
dat$DateTime <- strptime(paste(dat$Date, dat$Time), format="%Y-%m-%d %H:%M:%S")
## Set transparent background
par(bg = "transparent")
## Plot the line graph
plot(dat$DateTime, dat$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
## Copy to png file and close
dev.copy(png, "plot2.png", width = 480, height = 480, units = "px", bg = "transparent")
dev.off()
## Load In Data
dat <- read.csv("household_power_consumption.txt", sep = ";")
## Convert the dates to the proper dateformat
dat$Date <- as.Date(dat$Date, format = "%d/%m/%Y")
## Subset Data between the specified dates
date1 <- as.Date("2007-02-01")
date2 <- as.Date("2007-02-02")
dat <- dat[dat$Date >= date1 & dat$Date <= date2,]
## Convert the Global Active Power to numeric
dat$Global_active_power <- as.numeric(as.character(dat$Global_active_power))
dat$Global_reactive_power <- as.numeric(as.character(dat$Global_reactive_power))
dat$Voltage <- as.numeric(as.character(dat$Voltage))
dat$Sub_metering_1 <- as.numeric(as.character(dat$Sub_metering_1))
dat$Sub_metering_2 <- as.numeric(as.character(dat$Sub_metering_2))
dat$Sub_metering_3 <- as.numeric(as.character(dat$Sub_metering_3))
## Create new Date/Time column
dat$DateTime <- strptime(paste(dat$Date, dat$Time), format="%Y-%m-%d %H:%M:%S")
## Setup plotting the environment
par(mfrow = c(2,2), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0), bg = "transparent")
plot(dat$DateTime, dat$Global_active_power, type = "l", xlab = "", ylab = "Global Active Power (kilowatts)")
plot(dat$DateTime, dat$Voltage, type = "l", xlab = "datetime", ylab = "Voltage")
plot(dat$DateTime, dat$Sub_metering_1, type = "l", xlab = "", ylab = "Energy sub metering")
lines(dat$DateTime, dat$Sub_metering_2, col = "red")
lines(dat$DateTime, dat$Sub_metering_3, col = "blue")
legend("topright", lwd = 1, pt.cex = 2, cex = .25, col = c("black","blue", "red"), legend = c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
plot(dat$DateTime, dat$Global_reactive_power, type = "l", xlab = "datetime", ylab = "Global_reactive_power")
## Copy the plot to a png file and close it
dev.copy(png, "plot4.png", width = 480, height = 480, units = "px", bg = "transparent")
dev.off()
