demo90
demo()
install.packages("KernSmooth")
package.help(KernSmooth)
KernSmooth
installed.packages("KernSmooth")
installed.packages(c("KernSmooth")
)
installed.packages(c("KernSmooth"))
library(KernSmooth)
clear
clear()
5.4 %% 1
cube <- function(x,n) {x^3}
cube(3)
f <- function(x) {}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
f(3)
> library(ggmap)
> library(mapproj)
> map <- get_map(location = 'Europe', zoom = 4)
> ggmap(map)
library(ggmap)
install.packages(ggmap)
install.packages()
?install.packages
install.packages("ggmap")
library(ggmap)
map <- get_map(location = "United States", zoom = 4)
ggmap(map)
set.seed(1)
rpois(5, 2)
?dpois
x <- rep(0:1, each = 5)
x
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2*x + e
plot(x,y)
plot(y)
plot(x,y)
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2*x + e
plot(x,y)
hist(y)
?rbinom
?system.time
library(swirl)
swirl()
my_vector <- c(1:20)
my_vector[1:20]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix_2 <- matrix(1:20, nrow = 4, ncol = 5)
my_matrix_2 <- matrix(data = 1:20, nrow = 4, ncol = 5)
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelley", "Sean")
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients , my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
mean(c(8,11,6,12,8))
47+18
240 / 12
1250 * 1.08
1350 / 120
11 * 120
4!
factorial(4)
factorial(3)
81 ^ 2
81 ^ 2 ^ 2
5^5
3^3
4^4
25 * 6
150 / 5
200 / 40
24 / 60
.4 * 55
0.4 * 55
IRkernel::installspec(user = FALSE)
install.packages(c('rzmq','repr','IRkernel','IRdisplay'),
repos = c('http://irkernel.github.io/', getOption('repos')))
IRkernel::installspec()
x <- rnorm(100)
hist(x)
y <- rnorm(100)
plot(x, y)
par(mar = c(2, 2, 2, 2))
plot(x, y)
plot(x, y, pch = 4)
plot(x, y, pch = 10)
example("points")
setwd("~/Dropbox/Data Science Coursera/04 Exploratory Data Analysis/Project 1/ExData_Plotting1")
list()
pwd
workingdir()
wd()
we
wd
dat <- read.csv("household_power_consumption.txt")
head(dat)
summary(dat)
tail(dat)
ls()
is.data.frame(dat)
head(dat)
ls(dat)
col(dat)
colnames(dat)
dat <- read.table("household_power_consumption.txt")
head(dat)
colnames(dat)
dat <- read.csv("household_power_consumption.txt")
dat <- read.csv("household_power_consumption.txt", sep = ";")
head(dat)
?strptime
summary(dat)
date1 <- as.Date("2007-02-01")
date2 <- as.Date("2007-02-02")
dat$Date <- strptime(dat$Date)
dat$Date <- strptime(dat$Date, format = "%Y-%m-%d")
class(dat$Date)
head(dat)
dat <- read.csv("household_power_consumption.txt", sep = ";")
dat$Date <- as.Date(dat$Date)
class(dat$Date)
dat$Time <- strptime(dat$Time)
class(dat$Time)
test1 <- dat$Time[1:50]
test1
class(test1)
strptime(test1)
?strptime
strptime(test1, format = "%H:%M:%S")
?ISOdatetime
newDates <- with(dat, as.POSIXct(paste(Date, Time))
)
head(newDates)
head(dat)
tail(dat)
dat <- read.csv("household_power_consumption.txt", sep = ";")
newdat <- dat[dat$Date => date1 && dat$Date <= date2]
newdat <- dat[dat$Date >= date1 & dat$Date <= date2]
class(dat$Date)
newDates
head(newDates)
Date2 <- as.Date(dat$Date)
class(Date2)
head(Date2)
head(dat$Date)
?as.Date
Date2 <- as.Date(dat$Date, format= "%d-%m-%Y")
Date2
head(dat$Date)
tail(dat$Date)
Date2 <- as.Date(dat$Date, format= "%d/%m/%Y")
Date2
head(Date2)
dat$Date <- as.Date(dat$Date, format = "%d/%m/%Y")
dat$Date
date1 <- as.Date("2007-02-01")
date2 <- as.Date("2007-02-02")
subdat <- dat[dat$Date >= date1 & dat$Date <= date2]
subdat <- dat[dat$Date >= date1 && dat$Date <= date2]
subdat
subdat <- dat[dat$Date >= date1 & dat$Date <= date2,]
subdat
head(subdat)
hist(subdat$Global_active_power)
subdat$Global_active_power <- as.numeric(subdat$Global_active_power)
hist(subdat$Global_active_power)
?hist
is.na(subdat)
count(is.na(subdat))
count.fields(is.na(subdat))
na.omit(subdat)
subdat <- na.omit(subdat)
hist(subdat$Global_active_power)
?hist
hist(subdat$Global_active_power, breaks = 12, col = "red", xlab = "Global Active Power (kilowatts)")
hist(subdat$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)")
hist(subdat$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", xlim = 6)
hist(subdat$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", xlim = "6")
hist(subdat$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
summary(subdat$Global_active_power)
?xlim
xlim(c(0,2,4,6))
par(xlim = c(0,1,2,3))
hist(subdat$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power", xlim = c(0,3000)/1000)
hist(subdat$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power", xlim = c(0,3000))
?xlim
?hist
hist(subdat$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power", xlim = c(0,3000), breaks = 5)
hist(subdat$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power", xlim = c(0,3000), breaks = 12)
hist(subdat$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power", xlim = c(0,3000), breaks = 2-)
hist(subdat$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power", xlim = c(0,3000), breaks = 20)
hist(subdat$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power", xlim = c(0,3000))
gap <- subdat$Global_active_power / 1000
gap
hist(gap)
plot(subdat$Time, subdat$Global_active_power )
?transform
plot(subdat$Time, subdat$Global_active_power, type = "n")
dat <- dat[dat$Date >= date1 & dat$Date <= date2,]
head(dat)
hist(dat$Global_active_power)
dat$Global_active_power <- as.numeric(dat$Global_active_power)
hist(dat$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
head(dat$Global_active_power)
dat$Global_active_power == ?
dat[dat$Global_active_power == "?"]
dat[dat$Global_active_power == "?",]
## Load In Data
dat <- read.csv("household_power_consumption.txt", sep = ";")
## Convert the dates to the proper dateformat
dat$Date <- as.Date(dat$Date, format = "%d/%m/%Y")
## Subset Data between the specified dates
date1 <- as.Date("2007-02-01")
date2 <- as.Date("2007-02-02")
dat <- dat[dat$Date >= date1 & dat$Date <= date2,]
head(dat)
dat[dat$Global_active_power == "?",]
dat[is.na(dat$Global_active_power),]
is.na[dat$Global_active_power]
class(dat$Global_active_power)
hist(as.character(dat$Global_active_power))
hist(as.double(dat$Global_active_power))
hist(as.numeric(as.character(dat$Global_active_power)))
dat$Global_active_power <- as.numeric(as.character(dat$Global_active_power))
hist(dat$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
?png
png(filename = "plot1.png", width = 480, height = 480, units = "px")
?dev.copy()
dev.copy(quartz(), 'plot1.png')
dev.cur()
dev.copy(dev.cur(), 'plot1.png')
dev.copy(device = 2, 'plot1.png')
dev.off()
hist(dat$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
hist(dat$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
png(filename = "plot1.png", width = 480, height = 480, units = "px")
hist(dat$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
dev.set(quartz)
dev.set(quartz())
hist(dat$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
dev.copy(quartz(), 'plot1.png')
dev.copy(quartz, 'plot1.png')
## Load In Data
dat <- read.csv("household_power_consumption.txt", sep = ";")
## Convert the dates to the proper dateformat
dat$Date <- as.Date(dat$Date, format = "%d/%m/%Y")
## Subset Data between the specified dates
date1 <- as.Date("2007-02-01")
date2 <- as.Date("2007-02-02")
dat <- dat[dat$Date >= date1 & dat$Date <= date2,]
## Convert the Global Active Power to numeric
dat$Global_active_power <- as.numeric(as.character(dat$Global_active_power))
## Create histogram of Global Active Power
hist(dat$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
## Create png file for the graphics
png(filename = "plot1.png", width = 480, height = 480, units = "px")
## Copy the graphics from the window to the png file
dev.copy(quartz, 'plot1.png')
dev.off()
## Load In Data
dat <- read.csv("household_power_consumption.txt", sep = ";")
## Convert the dates to the proper dateformat
dat$Date <- as.Date(dat$Date, format = "%d/%m/%Y")
## Subset Data between the specified dates
date1 <- as.Date("2007-02-01")
date2 <- as.Date("2007-02-02")
dat <- dat[dat$Date >= date1 & dat$Date <= date2,]
## Convert the Global Active Power to numeric
dat$Global_active_power <- as.numeric(as.character(dat$Global_active_power))
## Create png file for the graphics
png(filename = "plot1.png", width = 480, height = 480, units = "px")
## Create histogram of Global Active Power
hist(dat$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
## Close png file
dev.off()
?png
## Load In Data
dat <- read.csv("household_power_consumption.txt", sep = ";")
## Convert the dates to the proper dateformat
dat$Date <- as.Date(dat$Date, format = "%d/%m/%Y")
## Subset Data between the specified dates
date1 <- as.Date("2007-02-01")
date2 <- as.Date("2007-02-02")
dat <- dat[dat$Date >= date1 & dat$Date <= date2,]
## Convert the Global Active Power to numeric
dat$Global_active_power <- as.numeric(as.character(dat$Global_active_power))
## Create png file for the graphics
png(filename = "plot1.png", width = 480, height = 480, units = "px", bg = "transparent")
## Create histogram of Global Active Power
hist(dat$Global_active_power, col = "red", xlab = "Global Active Power (kilowatts)", main = "Global Active Power")
## Close png file
dev.off()
